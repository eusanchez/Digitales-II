$date
	Wed Sep  7 20:39:59 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench16 $end
$var wire 16 ! salida [15:0] $end
$var wire 16 " entrada [15:0] $end
$var wire 1 # RCO $end
$var wire 2 $ MODO [1:0] $end
$var wire 1 % ENB $end
$var wire 1 & CLK $end
$scope module contador16_1 $end
$var wire 1 ' RCO3 $end
$var wire 16 ( salida [15:0] $end
$var wire 16 ) entrada [15:0] $end
$var wire 1 * RCO2 $end
$var wire 1 + RCO1 $end
$var wire 1 , RCO0 $end
$var wire 1 # RCO $end
$var wire 2 - MODO [1:0] $end
$var wire 1 % ENB $end
$var wire 1 & CLK $end
$scope module contador1 $end
$var wire 4 . D [3:0] $end
$var wire 1 , RCO $end
$var wire 4 / Q [3:0] $end
$var wire 2 0 MODO [1:0] $end
$var wire 1 % ENB $end
$var wire 1 & CLK $end
$var reg 4 1 d_In [3:0] $end
$var reg 1 2 d_Out $end
$scope module DFF_1bit $end
$var wire 1 2 D $end
$var wire 1 % EN $end
$var wire 1 & CLK $end
$var reg 1 , Q $end
$upscope $end
$scope module DFF_4bits $end
$var wire 4 3 D [3:0] $end
$var wire 1 % EN $end
$var wire 1 & CLK $end
$var reg 4 4 Q [3:0] $end
$upscope $end
$upscope $end
$scope module contador2 $end
$var wire 1 , CLK $end
$var wire 4 5 D [3:0] $end
$var wire 1 + RCO $end
$var wire 4 6 Q [3:0] $end
$var wire 2 7 MODO [1:0] $end
$var wire 1 % ENB $end
$var reg 4 8 d_In [3:0] $end
$var reg 1 9 d_Out $end
$scope module DFF_1bit $end
$var wire 1 , CLK $end
$var wire 1 9 D $end
$var wire 1 % EN $end
$var reg 1 + Q $end
$upscope $end
$scope module DFF_4bits $end
$var wire 1 , CLK $end
$var wire 4 : D [3:0] $end
$var wire 1 % EN $end
$var reg 4 ; Q [3:0] $end
$upscope $end
$upscope $end
$scope module contador3 $end
$var wire 1 + CLK $end
$var wire 4 < D [3:0] $end
$var wire 1 * RCO $end
$var wire 4 = Q [3:0] $end
$var wire 2 > MODO [1:0] $end
$var wire 1 % ENB $end
$var reg 4 ? d_In [3:0] $end
$var reg 1 @ d_Out $end
$scope module DFF_1bit $end
$var wire 1 + CLK $end
$var wire 1 @ D $end
$var wire 1 % EN $end
$var reg 1 * Q $end
$upscope $end
$scope module DFF_4bits $end
$var wire 1 + CLK $end
$var wire 4 A D [3:0] $end
$var wire 1 % EN $end
$var reg 4 B Q [3:0] $end
$upscope $end
$upscope $end
$scope module contador4 $end
$var wire 1 ' CLK $end
$var wire 4 C D [3:0] $end
$var wire 1 # RCO $end
$var wire 4 D Q [3:0] $end
$var wire 2 E MODO [1:0] $end
$var wire 1 % ENB $end
$var reg 4 F d_In [3:0] $end
$var reg 1 G d_Out $end
$scope module DFF_1bit $end
$var wire 1 ' CLK $end
$var wire 1 G D $end
$var wire 1 % EN $end
$var reg 1 # Q $end
$upscope $end
$scope module DFF_4bits $end
$var wire 1 ' CLK $end
$var wire 4 H D [3:0] $end
$var wire 1 % EN $end
$var reg 4 I Q [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module testerINST $end
$var wire 1 # RCO $end
$var wire 16 J salida [15:0] $end
$var reg 1 & CLK $end
$var reg 1 % ENB $end
$var reg 2 K MODO [1:0] $end
$var reg 16 L entrada [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 L
bx K
bx J
bx I
bx H
xG
bx F
bx E
bx D
b0 C
bx B
bx A
x@
bx ?
bx >
bx =
b0 <
bx ;
bx :
x9
bx 8
bx 7
bx 6
b0 5
bx 4
bx 3
x2
bx 1
bx 0
bx /
b0 .
bx -
x,
x+
x*
b0 )
bx (
z'
1&
1%
bx $
x#
b0 "
bx !
$end
#1
0&
#2
b0 1
b0 3
02
b0 8
b0 :
09
b0 ?
b0 A
0@
b0 F
b0 H
0G
b11 $
b11 -
b11 0
b11 7
b11 >
b11 E
b11 K
1&
#3
0&
#4
bx0000 !
bx0000 (
bx0000 J
b0 /
b0 4
0,
1&
#5
0&
#6
b1 1
b1 3
bx 8
bx :
bx ?
bx A
bx F
bx H
b0 $
b0 -
b0 0
b0 7
b0 >
b0 E
b0 K
1&
#7
0&
#8
b10 1
b10 3
bx0001 !
bx0001 (
bx0001 J
b1 /
b1 4
1&
#9
0&
#10
b11 1
b11 3
bx0010 !
bx0010 (
bx0010 J
b10 /
b10 4
1&
#11
0&
#12
b100 1
b100 3
bx0011 !
bx0011 (
bx0011 J
b11 /
b11 4
1&
#13
0&
#14
b101 1
b101 3
bx0100 !
bx0100 (
bx0100 J
b100 /
b100 4
1&
#15
0&
#16
b110 1
b110 3
bx0101 !
bx0101 (
bx0101 J
b101 /
b101 4
1&
#17
0&
#18
b111 1
b111 3
bx0110 !
bx0110 (
bx0110 J
b110 /
b110 4
1&
#19
0&
#20
b1000 1
b1000 3
bx0111 !
bx0111 (
bx0111 J
b111 /
b111 4
1&
#21
0&
#22
b1001 1
b1001 3
bx1000 !
bx1000 (
bx1000 J
b1000 /
b1000 4
1&
#23
0&
#24
b1010 1
b1010 3
bx1001 !
bx1001 (
bx1001 J
b1001 /
b1001 4
1&
#25
0&
#26
b1011 1
b1011 3
bx1010 !
bx1010 (
bx1010 J
b1010 /
b1010 4
1&
#27
0&
#28
b1100 1
b1100 3
bx1011 !
bx1011 (
bx1011 J
b1011 /
b1011 4
1&
#29
0&
#30
b1101 1
b1101 3
bx1100 !
bx1100 (
bx1100 J
b1100 /
b1100 4
1&
#31
0&
#32
b1110 1
b1110 3
bx1101 !
bx1101 (
bx1101 J
b1101 /
b1101 4
1&
#33
0&
#34
b1111 1
b1111 3
bx1110 !
bx1110 (
bx1110 J
b1110 /
b1110 4
1&
#35
0&
#36
12
b0 1
b0 3
bx1111 !
bx1111 (
bx1111 J
b1111 /
b1111 4
1&
#37
0&
#38
0+
b1 1
b1 3
02
1,
bx0000 !
bx0000 (
bx0000 J
b0 /
b0 4
1&
#39
0&
#40
b10 1
b10 3
bx0001 !
bx0001 (
bx0001 J
b1 /
b1 4
0,
1&
#41
0&
#42
b11 1
b11 3
bx0010 !
bx0010 (
bx0010 J
b10 /
b10 4
1&
#43
0&
#44
b100 1
b100 3
bx0011 !
bx0011 (
bx0011 J
b11 /
b11 4
1&
#45
0&
#46
b101 1
b101 3
bx0100 !
bx0100 (
bx0100 J
b100 /
b100 4
1&
#47
0&
#48
b110 1
b110 3
bx0101 !
bx0101 (
bx0101 J
b101 /
b101 4
1&
#49
0&
#50
b111 1
b111 3
bx0110 !
bx0110 (
bx0110 J
b110 /
b110 4
1&
#51
0&
#52
b1000 1
b1000 3
bx0111 !
bx0111 (
bx0111 J
b111 /
b111 4
1&
